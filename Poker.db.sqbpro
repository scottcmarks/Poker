<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/Users/scott/Poker/Poker.db" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><current_tab id="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="3216"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="note_action_type"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="action_type" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="actions" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="data" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="data_orig" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="data_view" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="joined" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="new_notes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="note_action_type" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="note_to_action" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="note_to_type" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="notes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="notes_orig" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="sqlite_sequence" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table><table schema="main" name="types" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk=""><sort/><column_widths/><filter_values/><display_formats/><hidden_columns/><plot_y_axes/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT SUM ( amount ) from data</sql><sql name="SQL 7">SELECT sum(amount) from data 
inner join note_to_action on data.note_id =note_to_action.id 
inner join actions on note_to_action.action_id = actions.id 
 where actions.action = &quot;Profit&quot;</sql><sql name="SQL 12">SELECT date , date(date) as id, datetime(date) as dt,  julianday(date) as j , julianday('now') as jn from data
LIMIT 1</sql><sql name="SQL 13">DROP VIEW note_type;
CREATE VIEW note_type as 
select notes.note as note, types.type as type 
 from notes inner join note_to_type inner join types
 on notes.id=note_to_type.note_id and types.id=note_to_type.type_id
 order by notes.id asc
</sql><sql name="SQL 14">DROP TABLE action_type;
CREATE TABLE action_type (
  id INTEGER PRIMARY KEY  AUTOINCREMENT,
  action_id INTEGER NOT NULL REFERENCES actions,
  type_id INTEGER NOT NULL REFERENCES types
  );
 INSERT INTO action_type(action_id, type_id) 
SELECT DISTINCT note_to_action.action_id, note_to_type.type_id 
   FROM note_to_action INNER JOIN note_to_type ON note_to_action.note_id == note_to_type.note_id
   ORDER BY action_id ASC , type_id ASC;</sql><sql name="SQL 7">CREATE TABLE notes (
  id INTEGER PRIMARY KEY  AUTOINCREMENT,
  note VARCHAR NOT NULL,
  action_type_id INTEGER NOT NULL REFERENCES action_type
  );
INSERT INTO notes (id, note, action_type_id)
SELECT * FROM new_notes;</sql><sql name="SQL 8">PRAGMA foreign_keys=off;
ALTER TABLE new_notes RENAME TO notes;
PRAGMA foreign_keys=on;
</sql><sql name="SQL 10">DROP VIEW note_action_type;
CREATE VIEW note_action_type as
 select notes.note as note, 
           actions.action as action, 
		   types.type as type
 from notes inner join action_type 
                    inner join actions
					inner join types 
 on notes.action_type_id=action_type.id 
   and actions.id=action_type.action_id
   and types.id = action_type.type_id
order by notes.id asc</sql><sql name="SQL 12">DROP VIEW joined;
CREATE VIEW joined as
select data.id as id
         , data.date as date
		 , data.amount as amount
		 , data.note_id as note_id 
		 , notes.note as note
		 , notes.action_type_id as action_type_id
		 , action_type.action_id as action_id
		 , actions.action as action
		 , action_type.type_id as type_id
		 , types.type as type
from data 
inner join notes          on data.note_id              = notes.id
inner join action_type on notes.action_type_id  = action_type.id
inner join actions       on action_type.action_id = actions.id
inner join types         on action_type.type_id    = types.id
</sql><sql name="SQL 13">DROP VIEW data_view;
CREATE VIEW data_view as
select data.id as id
         , data.date as date
		 , data.amount as amount
		 , data.note_id as note_id 
		 , action_type.type_id as type_id
from data 
inner join notes          on data.note_id              = notes.id
inner join action_type on notes.action_type_id  = action_type.id
</sql><sql name="SQL 2">SELECT notes.note
FROM notes inner join action_type ON notes.action_type_id   = action_type.id
           inner join actions     ON actions.id             = action_type.action_id
WHERE actions.action = &quot;Profit&quot;
ORDER BY notes.id
LIMIT 1</sql><sql name="SQL 1">INSERT INTO note_to_action(note_id,action_id) 
SELECT notes.id as note_id, action_type.action_id 
FROM notes inner join action_type on notes.action_type_id = action_type.id</sql><current_tab id="11"/></tab_sql></sqlb_project>
